{"ast":null,"code":"import { put, call, takeEvery } from 'redux-saga/effects';\nimport * as UserApi from '../api/UserApi';\nimport ACTION_TYPES from '../ACTION_TYPES';\nexport function* fetchUserData(action) {\n  try {\n    const response = yield call(UserApi.getUsers);\n    yield put({\n      type: ACTION_TYPES.UI_ACTION.ON_USERS_DATA,\n      data: response.data\n    });\n  } catch (e) {\n    console.error(\"user request failed\");\n    yield put({\n      type: ACTION_TYPES.UI_ACTION.ON_USERS_DATA,\n      error: e\n    });\n  }\n}\nexport function* watchUserData() {\n  yield takeEvery(ACTION_TYPES.UI_ACTION.FETCH_USERS, fetchUserData);\n}","map":{"version":3,"sources":["/var/www/html/react-application/react-redux-saga-sample/src/saga/UserSaga.js"],"names":["put","call","takeEvery","UserApi","ACTION_TYPES","fetchUserData","action","response","getUsers","type","UI_ACTION","ON_USERS_DATA","data","e","console","error","watchUserData","FETCH_USERS"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,SAAnB,QAAmC,oBAAnC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAO,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AACnC,MAAI;AAEA,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACE,OAAO,CAACK,QAAT,CAA3B;AAEA,UAAMR,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEL,YAAY,CAACM,SAAb,CAAuBC,aADvB;AAENC,MAAAA,IAAI,EAAEL,QAAQ,CAACK;AAFT,KAAD,CAAT;AAIH,GARD,CAQE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd;AACA,UAAMf,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEL,YAAY,CAACM,SAAb,CAAuBC,aADvB;AAENI,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;AAED,OAAO,UAAUG,aAAV,GAA0B;AAC7B,QAAMd,SAAS,CACXE,YAAY,CAACM,SAAb,CAAuBO,WADZ,EAEXZ,aAFW,CAAf;AAIH","sourcesContent":["import {put, call, takeEvery} from 'redux-saga/effects'\n\nimport * as UserApi from '../api/UserApi'\nimport ACTION_TYPES from '../ACTION_TYPES'\n\nexport function* fetchUserData(action) {\n    try {\n\n        const response = yield call(UserApi.getUsers);\n\n        yield put({\n            type: ACTION_TYPES.UI_ACTION.ON_USERS_DATA,\n            data: response.data\n        });\n    } catch (e) {\n        console.error(\"user request failed\");\n        yield put({\n            type: ACTION_TYPES.UI_ACTION.ON_USERS_DATA,\n            error: e\n        });\n    }\n}\n\nexport function* watchUserData() {\n    yield takeEvery(\n        ACTION_TYPES.UI_ACTION.FETCH_USERS,\n        fetchUserData\n    );\n}"]},"metadata":{},"sourceType":"module"}