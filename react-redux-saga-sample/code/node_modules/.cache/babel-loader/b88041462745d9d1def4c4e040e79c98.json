{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { appMainSaga } from \"../saga/MainSaga\";\nimport userReducer from \"./UserReducer\";\n\nconst loadState = key => {\n  try {\n    const serializedStage = localStorage.getItem(key);\n\n    if (serializedStage === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedStage);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst saveState = (key, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch (e) {}\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\nconst combinedReducer = combineReducers({\n  userActions: userReducer\n});\nconst persistedState = loadState('state');\nconst enhancer = compose(applyMiddleware(...middleware));\nconst store = createStore(combinedReducer, persistedState, enhancer);\nstore.subscribe(() => {\n  saveState('state', store.getState());\n});\nwindow.store_ref = store;\nsagaMiddleware.run(appMainSaga);\nexport default {\n  store\n};","map":{"version":3,"sources":["/var/www/html/react-application/react-redux-saga-sample/src/redux/Store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","createSagaMiddleware","appMainSaga","userReducer","loadState","key","serializedStage","localStorage","getItem","undefined","JSON","parse","err","saveState","state","serializedState","stringify","setItem","e","sagaMiddleware","middleware","combinedReducer","userActions","persistedState","enhancer","store","subscribe","getState","window","store_ref","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,EAA+CC,eAA/C,QAAqE,OAArE;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAGA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,MAAI;AACA,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAxB;;AACA,QAAIC,eAAe,KAAK,IAAxB,EAA8B;AAC1B,aAAOG,SAAP;AACH;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACH,GAND,CAME,OAAOM,GAAP,EAAY;AACV,WAAOH,SAAP;AACH;AACJ,CAVD;;AAYA,MAAMI,SAAS,GAAG,CAACR,GAAD,EAAMS,KAAN,KAAgB;AAC9B,MAAI;AACA,UAAMC,eAAe,GAAGL,IAAI,CAACM,SAAL,CAAeF,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACU,OAAb,CAAqBZ,GAArB,EAA0BU,eAA1B;AACH,GAHD,CAGE,OAAOG,CAAP,EAAU,CACX;AACJ,CAND;;AASA,MAAMC,cAAc,GAAGlB,oBAAoB,EAA3C;AAEA,MAAMmB,UAAU,GAAG,CAACD,cAAD,CAAnB;AAEA,MAAME,eAAe,GAAGrB,eAAe,CAAC;AAACsB,EAAAA,WAAW,EAAEnB;AAAd,CAAD,CAAvC;AACA,MAAMoB,cAAc,GAAGnB,SAAS,CAAC,OAAD,CAAhC;AAEA,MAAMoB,QAAQ,GAAGzB,OAAO,CAACD,eAAe,CAAC,GAAGsB,UAAJ,CAAhB,CAAxB;AAEA,MAAMK,KAAK,GAAG5B,WAAW,CAACwB,eAAD,EAAkBE,cAAlB,EAAkCC,QAAlC,CAAzB;AACAC,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBb,EAAAA,SAAS,CAAC,OAAD,EAAUY,KAAK,CAACE,QAAN,EAAV,CAAT;AACH,CAFD;AAGAC,MAAM,CAACC,SAAP,GAAmBJ,KAAnB;AAEAN,cAAc,CAACW,GAAf,CAAmB5B,WAAnB;AAEA,eAAe;AACXuB,EAAAA;AADW,CAAf","sourcesContent":["import {createStore, applyMiddleware, compose, combineReducers} from \"redux\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport {appMainSaga} from \"../saga/MainSaga\";\n\n\nimport userReducer from \"./UserReducer\";\n\n\nconst loadState = (key) => {\n    try {\n        const serializedStage = localStorage.getItem(key);\n        if (serializedStage === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedStage)\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst saveState = (key, state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(key, serializedState);\n    } catch (e) {\n    }\n};\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst combinedReducer = combineReducers({userActions: userReducer});\nconst persistedState = loadState('state');\n\nconst enhancer = compose(applyMiddleware(...middleware));\n\nconst store = createStore(combinedReducer, persistedState, enhancer);\nstore.subscribe(() => {\n    saveState('state', store.getState());\n});\nwindow.store_ref = store;\n\nsagaMiddleware.run(appMainSaga);\n\nexport default {\n    store\n};"]},"metadata":{},"sourceType":"module"}